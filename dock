#!/bin/bash
readonly PROGDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
readonly HOMEDIR=$(echo $HOME)
readonly PROGNAME=$(basename $0)
readonly ARGS="$@"
readonly GITDIR=/home/git
readonly NGINX_DIR=/etc/nginx

[[ $# -eq 0 ]] && {
  # no arguments
  echo echo "Usage: PROGNAME your_repo {u|user|r|repo|b|branch|n|name|v|version}"
  echo "Successfully Installed the following:"
  node -v
  ruby -v
  gem list
  nginx -v
  htop --version
  mosh -v
  tig -v
  tree --version
  emacs --version
  git --version
  ntpd --version
  unzip -v
  varnishlog
  exit 1
}

function deploy(){
  #-------------------
  # SSH Key
  #-------------------
  sudo ssh-keygen
  sudo cat /root/.ssh/id_rsa.pub
  #-------------------
  # Git Deployment
  #-------------------
  # u) USERNAME:        username of repository owner
  # r) REPOSITORY:      name of the repository being added
  # n) SERVICE_NAME:    name of the service to be created
  # b) BRANCH:          branch to be checked out
  # v) VERSION:         Version of App
  $PROGDIR/deploy $2 $3 $4
}
function prodInstall(){
  # update and upgrade 
  sudo apt-get update
  sudo apt-get -y upgrade
  sudo apt-get upgrade --show-upgraded
  # Configure Time Zone 
  sudo dpkg-reconfigure tzdata
  sudo ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
  # Install Apps
  sudo apt-get install -y emacs
  sudo apt-get install -y htop
  sudo apt-get install -y tree
  sudo apt-get install -y git
  sudo apt-get install -y tig
  sudo apt-get install -y wget
  sudo apt-get install -y tmux
  sudo apt-get install -y rubygems
  sudo apt-get install -y unzip
  sudo apt-get install -y ntp
  sudo apt-get install -y fail2ban
  sudo apt-get install -y zsh
  # Install Rubygems
  sudo gem install sass
  sudo gem install compass
  sudo gem install ceaser-easing
  sudo gem install compass-normalize
  sudo gem install bundle
  # Set clock/restart cron
  ntpdate && hwclock â€“w
  sudo service cron stop
  sudo service cron start
  #-------------------
  # Git User
  #-------------------
  sudo adduser --disabled-password --gecos "" git
  sudo usermod -a -G sudo git
  # change the default shell to zsh
  sudo chsh -s /usr/bin/zsh git
  # copy the AWS authorized key to the git account
  sudo mkdir -p $GITDIR/.ssh/
  cp -i $HOME_DIR/.ssh/authorized_keys $GITDIR/.ssh/authorized_keys
  # sync dotfiles
  sudo rsync  --exclude ".osx" --exclude ".DS_Store" --exclude "bootstrap.sh" --exclude "README.md" -av --no-perms $PROGDIR/lib/dotfiles/ $GITDIR
  # Configure Permissions
  sudo chmod a+rx $GITDIR
  sudo chown -R git:git $GITDIR
  # add to sudoers
  sudo chmod 0440 $PROGDIR/lib/patches/gitsudoer
  sudo cp $PROGDIR/lib/patches/gitsudoer /etc/sudoers.d/
  #-------------------
  # Install Nginx
  #-------------------
  sudo $PROGDIR/lib/install/nginx.sh
  #-------------------
  # Configure Nginx
  #-------------------
  # Backup existing configs
  sudo mv $NGINX_DIR/nginx.conf $NGINX_DIR/nginx.conf.backup
  # Copy new nginx.config  and site-available
  sudo cp -i $PROGDIR/config/nginx.conf $NGINX_DIR
  #-------------------
  # Install Varnish
  #-------------------
  sudo $PROGDIR/lib/install/nginx.sh
  #-------------------
  # Configure Varnish
  #-------------------
  # Backup existing configs
  sudo cp /etc/varnish/default.vcl /etc/varnish/default.vcl.old
  sudo cp /etc/default/varnish /etc/default/varnish.old
  # Copy new varnish and default.vcl
  sudo patch /etc/default/varnish < $PROGDIR/lib/patches/varnish.diff
  sudo patch /etc/varnish/default.vcl < $PROGDIR/lib/patches/default.vcl.diff
  # Stop Varnish and Nginx
  sudo service nginx stop
  sudo service varnish stop
  #------------------
  # Install Node Stable
  # Also installs Grunt, Forever, Bower, Coffee, Node-Inspector
  #------------------
  sudo $PROGDIR/lib/install/node.sh
  # Installing Ghost via npm, to install independently uncomment this:
  # sudo ./lib/install/ghost.sh
  # Install Mosh
  sudo apt-get install -y python-software-properties
  sudo add-apt-repository -y ppa:keithw/mosh
  sudo apt-get update
  sudo apt-get install -y mosh
  # Start nginx and varnish
  sudo service nginx start
  sudo service varnish start
  #-------------------
  # TODO: Firewall
  #-------------------
  # sudo cp -i $PROGDIR/lib/iptables.firewall.rules /etc/iptables.firewall.rules
  # sudo iptables-restore < /etc/iptables.firewall.rules
  # sudo cp -i $PROGDIR/lib/firewall /etc/network/if-pre-up.d/firewall
  # Fail2Ban
  sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
}
function devInstall() {
  # Install homebrew
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
  # Install brew cask
  brew tap phinze/cask
  brew install brew-cask
  # Bootstrap the command line
  $PROGDIR/lib/dotfiles/bootstrap.sh
  # This script will:
  #   1. Copy dotfiles to home dir (dotfiles)
  #   2. install command line apps using brew (dotfiles/Brewfile)
  #   3. install gui apps upsing brew casks (dotfiles/.cask)
  #   4. install ruby gems and node modules
  # change permissions on the home dir
}
if [ "$1" == "--prod" -o "$1" == "-p" ]; then
  prodInstall
elif [ "$1" == "--deploy" -o "$1" == "-d" ]; then
  deploy $ARGS
else
  devInstall
fi
unset prodInstall
unset devInstall
unset deploy