#!/bin/bash
readonly ScriptVersion="0.2"
readonly PROGDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
readonly HOMEDIR=$(echo $HOME)
readonly PROGNAME=$(basename $0)
readonly LOG_FILE=$PROGDIR/../../logs/dev.error.log
readonly DOTFILES=$PROGDIR/../dotfiles
readonly PATCHES=$PROGDIR/../patches
readonly INSTALL_DIR=$PROGDIR/../install
readonly CONFIG_DIR=$PROGDIR/../config
readonly ARGS="$@"
readonly GITDIR=/home/git
readonly NGINX_DIR=/etc/nginx
readonly g=/usr/bin/git
exec 3>&1 1>>${LOG_FILE} 2>&1;

function command_exists () {
    type "$1" &> /dev/null ;
}
# Bootstrap the command line
# This script will:
#   1. Copy dotfiles to home dir (dotfiles)
#   2. install command line apps using brew (dotfiles/Brewfile)
#   3. install gui apps upsing brew casks (dotfiles/.cask)
#   4. install ruby gems and node modules
if command_exists brew ; then
    echo -e "\ndev: Brew Installed... continuing" 1>&3;
    brew up 1>&3;
    brew cask up 1>&3;
    brew upgrade 1>&3;
    brew cask doctor 1>&3;
    brew doctor 1>&3;
else
  # Install homebrew
  echo -e "\ndev: Installing Homebrew" 1>&3;
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)" | tee /dev/fd/3;
  brew tap phinze/homebrew-cask
  brew install brew-cask
fi
echo -e "\ndev: This may overwrite existing files in your home directory. Are you sure? (y/n)" 1>&3;
read -n 1;
if [[ $REPLY =~ ^[Yy]$ ]]; then
  # Sync Dotfiles
  rsync --exclude ".git/" --exclude ".DS_Store" --exclude "bootstrap.sh" --exclude "README.md" -av --no-perms $DOTFILES ~ | tee /dev/fd/3
fi
echo -e " \ndev: Do you want to install apps via Homebrew? (y/n) " 1>&3;
read -n 1
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo -e "\ndev: installing GUIs and CLIs via Homebrew... " 1>&3;
  brew bundle $PROGDIR/Brewfile | tee /dev/fd/3;
fi
echo -e "\ndev: Do you want to install Gems and Npm modules? (y/n) " 1>&3;
read -n 1
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if command_exists bundle; then
      echo -e "\ndev: Bundler Installed... continuing" 1>&3;
    else
        sudo gem install bundler | tee /dev/fd/3;
    fi
  bundle install | tee /dev/fd/3;
  # install node modules
  sudo npm cache clean;
  function installGlobal() {
    # TODO: improve this to work all 
    if command_exists "${@}"; then
      echo -e "dev: ${@}:" $("${@}" "--version") 1>&3;
    else
      sudo npm install -g "${@}" | tee /dev/fd/3;
    fi
  }
  installGlobal bower
  installGlobal forever
  installGlobal node-inspector
  installGlobal ohm
  installGlobal grunt-cli
  installGlobal coffee-script
  installGlobal strong-cli
  npm ls -g --depth=0 1>&3;
fi
unset command_exists
